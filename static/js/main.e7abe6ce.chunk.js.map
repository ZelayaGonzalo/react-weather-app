{"version":3,"sources":["App.js","index.js"],"names":["initalHeight","window","innerHeight","initialWidth","innerWidth","document","body","style","height","minHeight","width","weekday","App","useState","data","setData","search","setSearch","forecastData","setForecastData","getData","a","fetch","response","json","alert","event","preventDefault","newData","sys","loadForecast","coord","lat","lon","daily","convertSunset","string","newDate","Date","getHours","getMinutes","useEffect","firstLoad","className","onSubmit","onChange","value","target","type","placeholder","name","country","main","temp","position","top","feels_like","map","info","dt","getDay","id","weather","Math","round","day","sunrise","wind","speed","sunset","humidity","pressure","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e7abe6ce.chunk.js","sourcesContent":["import './App.css';\nimport {useEffect,useState} from \"react\"\nconst initalHeight=window.innerHeight\nconst initialWidth=window.innerWidth\ndocument.body.style.height=\"100vh\"\ndocument.body.style.minHeight=`${initalHeight}px`\ndocument.body.style.width=initialWidth\nconst weekday = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\nfunction App() {\n  const [data,setData]=useState(null)\n  const [search,setSearch]=useState(\"\")\n  const [forecastData,setForecastData]=useState([])\n\n  function handleSearch(event){\n    const value=event.target.value\n    setSearch(value)\n  }\n\n\n  async function getData(){\n    try{\n      const response=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=c0e154dd9b98a25155bb3d7883758ba1`)\n      const data=await response.json()\n      return data\n      }\n      catch{\n        alert(\"No city found\")\n        return null\n      }\n  }\n\n\n  async function searchCity(event){\n   event.preventDefault()\n   const newData=await getData()\n    if(newData.sys){\n      await loadForecast(newData.coord.lat,newData.coord.lon)\n      setData(newData)\n   }\n   else{\n     alert(\"No city found\")\n   }\n  }\n\n  async function loadForecast(lat,lon ){\n    const response= await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=current,hourly,minutely,alerts&units=metric&appid=c0e154dd9b98a25155bb3d7883758ba1`)\n    const data= await response.json()\n    setForecastData(data.daily)\n  }\n\n  async function firstLoad(){\n    const response=await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=Salta&units=metric&appid=c0e154dd9b98a25155bb3d7883758ba1\")\n    const data=await response.json()\n    await loadForecast(data.coord.lat,data.coord.lon)\n    setData(data)\n  }\n\n  useEffect(()=>{\n    firstLoad()\n  },[])\n\n\n  function returnCorrectIcon(id){\n    if(id >= 200 && id <= 299){\n      return \"fas fa-bolt\"\n    }\n    else if(id >=300 && id <=399){\n      return \"fas fa-cloud-sun-rain\"\n    }\n    else if(id >=500 && id <=599){\n      return \"fas fa-cloud-showers-heavy\"\n    }\n    else if(id >=600 && id <=699){\n      return \"fas fa-snowflake\"\n    }\n    else if(id >=700 & id <=799){\n      return \"fas fa-smog\"\n    }\n    else if (id === 800){\n      return \"fas fa-sun\"\n    }\n    else if (id >=801 && id <=899){\n      return \"fas fa-cloud\"\n    }\n    else return \"fas-fa-sun\"\n  }\n\n  function returnDay(string){\n    const newDate=new Date(string *1000)\n    return newDate.getDay()\n  }\n  function convertSunset(string){\n    const newDate=new Date(string * 1000)\n    return `${newDate.getHours()}:${newDate.getMinutes()}`\n  }\n  \n  return (\n<div className=\"containers\">\n  <div className=\"background-image\"></div>\n  <div className=\"wheater-container\">\n    <div className=\"search-container\">\n      <form onSubmit={searchCity} className=\"search-box\">\n        <input  onChange={handleSearch} value={search} type=\"text\" placeholder=\"Search...\"></input>\n        <button type=\"submit\"><i className=\"fas fa-search-location\"></i></button>\n      </form>\n    </div>\n    <div className=\"container data\">\n      <p className=\"city\">{data===null? \"Search a city\":`${data.name},${data.sys.country}`}</p>\n      <div className=\"date\">\n        <span className=\"main-text\">Today</span> \n      </div>\n      <div className=\"main-temp\">\n        <span className=\"main-text\">{data===null ?\"...\": data.main.temp}</span> <span style={{position:'absolute',top:\"20%\"}}>°C</span>\n        <span className=\"sub-text\">{data===null ?\"...\": `Feels like ${data.main.feels_like} °C`}</span>\n      </div>\n    </div>\n  </div>\n  <div className=\"forecast\">\n    <div className=\"forecast-container\">\n      <p>Next 7 days</p>\n      <ul className=\"days-container\">\n        {forecastData.map(info => (<li>\n          <div className=\"day-frame\">\n          <p className=\"current-day\">{weekday[returnDay(info.dt)]}</p>\n          <i className={returnCorrectIcon(info.weather[0].id)}></i>\n          <p>{Math.round(info.temp.day)}<span>°C</span></p>\n        </div>      \n        </li>))}\n      </ul>\n    </div>\n  </div>\n  <div className=\"details\">\n    <div className=\"details-container\">\n      <div className=\"side left\">\n        <ul className=\"details-frame left\">\n          <li className=\"details-item\">\n            <span className=\"details-title\">SUNRISE</span>\n            <p className=\"details-text\">{data===null ?\"...\": convertSunset(data.sys.sunrise)}</p>\n          </li>\n          <li className=\"details-item\">\n            <span className=\"details-title\">WEATHER</span>\n            <p className=\"details-text\">{data===null ?\"...\": data.weather[0].main}</p>\n          </li>\n          <li className=\"details-item\">\n            <span className=\"details-title\">WIND</span>\n            <p className=\"details-text\">{data===null ?\"...\": `${data.wind.speed}Km/h`}</p>\n          </li>\n        </ul>\n      </div>\n      <div className=\"side right\">\n      <ul className=\"details-frame right\">\n        <li className=\"details-item\">\n          <span className=\"details-title\">SUNSET</span>\n          <p className=\"details-text\">{data===null ?\"...\": convertSunset(data.sys.sunset)}</p>\n        </li>\n        <li className=\"details-item\">\n          <span className=\"details-title\">HUMIDITY</span>\n          <p className=\"details-text\">{data===null ?\"...\": data.main.humidity}</p>\n        </li>\n        <li className=\"details-item\">\n          <span className=\"details-title\">PRESSURE</span>\n          <p className=\"details-text\">{data===null ?\"...\": `${data.main.pressure} hPa`}</p>\n        </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</div>\n  )\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}